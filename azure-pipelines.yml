# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- eindohav

pool:
  vmImage: 'ubuntu-latest'


variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  MajorVersion: 1
  MinorVersion: 0
  PatchVersion: 0
  artifactZipName: $(MajorVersion).$(MinorVersion).$(PatchVersion)$(rev:.r)
  
steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'echo "Helo wkugkor uyjhgjgjf ld"'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'echo $(ls)'

    
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: false

- task: PublishBuildArtifacts@1
  displayName: Publish the artifact
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: test

- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.ArtifactStagingDirectory)'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: '37ece580-4b15-4c8e-85be-ab3d3f739581'
    vstsFeedPackagePublish: 'test_predict'
    versionOption: 'patch'
    packagePublishDescription: 'This is for testing'
    publishedPackageVar: 'test_predict'

